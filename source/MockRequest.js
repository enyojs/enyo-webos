/**
	An mock version of <a href="#enyo.ServiceRequest">enyo.ServiceRequest</a>
	designed for webOS service request simulation.

	It will read json mock results from a file and return the results in a
	manner similar to real service requests.

	For example, a call to service "palm://com.palm.systemservice/time" with
	method "getSystemTime" would automatically try to read the file
	"mock/com.palm.systemservice/time/getSystemTime.json". Alternatively, the
	_mockFile_ property can be set to specify a specific json file to read.
*/

enyo.kind({
	name: "enyo.MockRequest",
	//* @protected
	kind: "enyo.Ajax",
	mimeType: "application/json",
	//* @public
	published: {
		//* Palm service URI.  Starts with palm:// and will be used to create the autogenerated mock filepath directory
		service: "",
		//* Service method and will be used to create the autogenerated mock filename (with ".json" appended)
		method: "",
		//* Optionally specify the json file to read for mock results, rather than the specifying service and method
		mockFile: undefined
	},
	//* Execute the mock service request
	go: function() {
		if(this.mockFile) {
			this.url = this.mockFile;
		} else {
			this.url = this.service;
			var i = this.url.indexOf("://");
			if(i>-1) {
				this.url = this.url.substring(i+3);
			}
			this.url = "mock/" + this.url;
			if(this.method && this.method.length>0) {
				if(this.url.charAt(this.url.length-1) != "/") {
					this.url += "/";
				}
				this.url += this.method;
			}
			this.url += ".json";
		}
		var serviceMethod = this.method;
		this.method = "GET";
		var request = this.inherited(arguments);
		this.method = serviceMethod;
		return request;
	},
	//* Cancel the request
	cancel: function() {
		if(this.xhr) {
			enyo.xhr.cancel(this.xhr);
			this.endTimer();
			this.xhr = null;
		}
	},
	//* @protected
	respond: function(inValue) {
		if(inValue.errorCode || inValue.returnValue === false) {
			this.fail(inValue);
		} else {
			this.inherited(arguments);
		}
	}
});